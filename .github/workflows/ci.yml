name: CI

on:
  pull_request:
  push:
    branches: ["main"]

env:
  # Disable incremental compilation to avoid PDB locking issues on Windows
  CARGO_INCREMENTAL: 0
  # Reduce debuginfo to speed up builds and reduce PDB size
  CARGO_PROFILE_DEV_DEBUG: 1
  # Windows specific: disable long path issues
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  # Skip npm install in tests to avoid timeout
  TERMINATOR_SKIP_NPM_INSTALL: 1
  # Skip telemetry collector check to avoid CI timeouts
  OTEL_SKIP_COLLECTOR_CHECK: true
  # Reduce retry time for telemetry in CI
  OTEL_RETRY_DURATION_MINS: 0

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: dtolnay/rust-toolchain@stable

      # Clean target directory to avoid PDB conflicts
      - name: Clean target directory
        run: |
          if (Test-Path target) { Remove-Item -Recurse -Force target }
        shell: pwsh

      - uses: Swatinem/rust-cache@v2
        with:
          key: windows-${{ hashFiles('**/Cargo.lock') }}

      # Build with retries
      - name: Build workspace
        run: |
          $attempts = 3
          for ($i = 1; $i -le $attempts; $i++) {
            Write-Host "Build attempt $i of $attempts"
            cargo build --workspace --verbose
            if ($LASTEXITCODE -eq 0) {
              break
            }
            if ($i -lt $attempts) {
              Write-Host "Build failed, retrying in 5 seconds..."
              Start-Sleep -Seconds 5
              # Clean PDB files that might be locked
              Get-ChildItem -Path target -Include *.pdb -Recurse | Remove-Item -Force -ErrorAction SilentlyContinue
            }
          }
          if ($LASTEXITCODE -ne 0) {
            exit $LASTEXITCODE
          }
        shell: pwsh

      - name: Run Rust tests
        run: cargo test --workspace --verbose  -- --test-threads=1

      - name: Test with telemetry feature
        run: |
          cargo build -p terminator-mcp-agent --features telemetry
          cargo test -p terminator-mcp-agent --features telemetry -- --test-threads=1

      - name: Test with sentry feature
        run: |
          cargo build -p terminator-mcp-agent --features sentry
          cargo test -p terminator-mcp-agent --features sentry -- --test-threads=1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Node.js dependencies
        run: |
          cd packages/terminator-nodejs
          npm install
        shell: pwsh

      - name: Build Node.js bindings
        run: |
          cd packages/terminator-nodejs
          npm run build
        shell: pwsh

      - name: Run Node.js tests
        run: |
          cd packages/terminator-nodejs
          npm test
        shell: pwsh
